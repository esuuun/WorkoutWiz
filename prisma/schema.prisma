// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  id          String    @id @default(uuid())
  userId      String
  title       String
  progress    Float     @default(0.0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  days        Day[]     
}

model Day {
  id          String    @id @default(uuid())
  dayNumber   Int
  workoutId   String
  workout     Workout     @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  exercises   Exercise[]  
}

model Exercise {
  id          String    @id @default(uuid())
  name        String
  sets        Int
  reps        String    
  dayId       String
  day         Day       @relation(fields: [dayId], references: [id], onDelete: Cascade)
  completed   Boolean   @default(false)  
}

model UserSubscription {
  id        String    @id @default(cuid())
  userId    String    @unique
  stripeCustomerId        String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId    String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId           String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd  DateTime? @map(name: "stripe_current_period_end")
}

model Subscription{
  id        String    @id @default(cuid())
  userId    String    @unique
  lemonSqueezyCustomerId        String?   @unique @map(name: "lemon_squeezy_customer_id")
  lemonSqueezySubscriptionId    String?   @unique @map(name: "lemon_squeezy_subscription_id")
  lemonSqueezyPriceId         String?   @map(name: "lemon_squeezy_variant_id")
  lemonSqueezyCurrentPeriodEnd  DateTime? @map(name: "lemon_squeezy_current_period_end")
}
